name: Test and Release

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'          # Run on any tag push (for release)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests on All Platforms
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2025
          - macos-14
          - ubuntu-24.04
        jvm_version:
            - 21
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jvm_version }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permissions to gradlew (Linux/macOS only)
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Run tests (Linux/macOS)
        if: runner.os != 'Windows'
        run: ./gradlew test

      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        run: .\gradlew test

  release:
    name: Build and Release JavaDyno Fat JAR
    runs-on: ubuntu-24.04
    needs: test
    if: startsWith(github.ref, 'refs/tags/')  # Run release only on tag pushes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Build fat JAR
        run: ./gradlew shadowJar

      - name: Extract tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Rename JAR
        run: |
          mkdir -p release
          cp build/libs/*-all.jar release/JavaDyno-${{ env.TAG_NAME }}.jar

      - name: Upload JAR to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/JavaDyno-${{ env.TAG_NAME }}.jar
          tag_name: ${{ env.TAG_NAME }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}